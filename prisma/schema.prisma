generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model categories {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
}

model products {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  image_url   String?  @db.VarChar(255)
  category_id Int?
  createdAt   DateTime @default(now()) @db.DateTime(0)
  contents    String?  @db.Text
  price       Int      @default(20000)

  @@index([category_id], map: "category_id_idx")
}

model user {
  id String @id @default(cuid())
  name String? @db.VarChar(255)
  email String? @unique @db.VarChar(255)
  image String? @db.VarChar(255)
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Wishlist {
  id   Int    @id @default(autoincrement())
  userId String @unique
  productIds String
}

model Cart {
  id   Int    @id @default(autoincrement())
  userId String
  productId Int
  quantity Int
  amount Int
}

model OrderItem {
  id   Int    @id @default(autoincrement())
  productId Int
  quantity Int
  price Int
  amount Int
}

model Orders {
  id   Int    @id @default(autoincrement())
  userId String
  orderItemIds String
  receiver String?
  address String?
  phoneNumber String?
  createdAt DateTime @default(now())
  status Int
}

model Comment {
  id   Int    @id @default(autoincrement())
  userId String
  // orderItem 하나당 하나만 유니크 하게 입력해야함.
  orderItemId Int @unique
  rate Int
  contents String?
  Images String?
  updateAt DateTime @updatedAt
}